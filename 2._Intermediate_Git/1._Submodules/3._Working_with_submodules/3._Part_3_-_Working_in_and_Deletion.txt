Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2021-02-20T08:03:45+05:30

====== 3. Part 3 - Working in and Deletion ======
Created Saturday 20 February 2021

=== Working in a submodule ===
* Change to the submodule first. You've already seen that working in a Submodule is like working in any other Git repository: any Git commands that you perform inside a Submodule directory are executed in the context of that sub-repository.
* Caution: Switch to a real branch before making changes inside the submodule.
* Just remember to set the "state" by checking out correctly, if you want to use your changes outside. Why? - Because if you are in a detached HEAD, your commits are easily lost as detached HEAD are lost when you checkout to any branch.
* Note: You can have //uncommitted// changes in the submodule. This is obviously stupid.
* Just make sure you keep a clean state of submodules.

=== Deleting a submodule ===
* Caution: Don't to delete submodules manually.
* Steps for deletion:
	1. Delete config files - ''git submodule deinit submodule_name_with_path''. 
		The contents still remains.
	2. Delete module folder - ''git rm module_name''. 	 
		This deletes the submodule folder(and contents) and also the ''.git'' file inside it. 
		We needed ''git rm'' because the folder and ''.git'' were tracked by the parent repo even if the contents weren't.
	4. delete the ''.git/modules/my_submodule'' folder.

=== Executing a Git command on every submodule ===
This is done via the ''foreach'' command
{{{code: lang="sh" linenumbers="True"
git submodule foreach --recursive 'git status'
}}}

