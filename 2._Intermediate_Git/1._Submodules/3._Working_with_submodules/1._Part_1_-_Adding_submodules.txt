Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2021-02-20T08:03:36+05:30

====== 1. Part 1 - Adding submodules ======
Created Saturday 20 February 2021

=== Adding an existing repo as submodule ===
* Go to the project repo.
* To add the submodule: specify the context after ''git'' keyword, like so:
{{{code: lang="sh" linenumbers="True"
git submodule add repo_URL
# example
git submodule add https://github.com/djyde/ToProgress

# you can also specify the path where the submodule needs to be added. If path is a single name, then it will become the submodule's name 
git submodule add repo_URL path
}}}

* Result: The submodule will be cloned. Check status.
{{{code: lang="sh" linenumbers="True"
$ git status
On branch master
Changes not staged for commit:
	(use "git add ..." to update what will be committed)
	(use "git checkout -- ..." to discard changes in working directory)

	modified:   lib/ToProgress (new commits)
}}}

* Although the parent repo does not track the submodules contents, you still need to ''commit'' the act of adding the submodule to the parent repo. Tangibly the ''.gitmodule'' file has been changed(or created in this case), which is staged automatically.
{{{code: lang="sh" linenumbers="True"
git commit -m "Add submodule"
}}}

* If you added the submodule by mistake, you set things right by doing this
{{{code: lang="sh" linenumbers="True"

• Although the parent repo does not track the submodules contents, you still need to commit the act of adding the submodule to the parent repo. Tangibly the .gitmodule file has changed, which is staged automatically.

• If you added the submodule by mistake, you set things right by doing this

git restore --staged ../.gitmodules submodule_name_with_path
}}}


=== Cloning a project having submodules ===
As the root repo only keeps //configurations// and does not track submodules, it only creates empty submodule directories when the root repo is cloned.
* There are 3 options here:
	a. Populate all submodules while cloning. Just add ''--recursive-submodules'' option to ''git clone''
	b. Populate all submodules after cloning. This is done by running git ''submodule update --init --recursive''
	c. For specific submodules: Go to the empty directory. Run ''git submodule init''(this will initialize the local configuration file) and then run ''git submodule update''. This will download the submodule content and set its state correctly, as recorded by the root repo.

=== Adding local repos as submodules ===
TODO
