Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-11-06T06:59:59+05:30

====== 3. Basic Git and VCS terminology ======
Created Friday 06 November 2020

This is one of the hardest things when learning Git(or any VCS).
Just skim the terms for relevant meaning.
--------------------
* **VCS** - Version Control System - A program used to achieve version control.
* **SCM** - Source Code Manager - Another name for VCS
* **Commit** - It is a 'Save' like action done by the user. Git basically takes a snapshot of selected files in the project directory. A commit must have a message which describes the change(or update). It is a fundamental unit in Git.
* **Repository / repo **- A repo is just a directory containing our project files, and a hidden __.git__ folder created and used by Git. A repo can be stored locally or as a remote copy on another computer. A repo can be thought of as a collection of commits.
* **Working Directory/ Working Tree** - It is the files as seen in a file manager. This is different from files saved(in commits) in the repository.
* **Checkout** - A checkout is when content in the repo has been copied to the working repository.
* **Staging Area/ Staging Index / Index** - Hidden files used by Git to store information which will go in the upcoming commit, i.e Files on the Staging Index are poised to be added to the repository. Staging is done by the user.
* **SHA** - ID number for a commit. It is a 40 character alphanumeric string. It's unique for every commit in a repo.
* **Branch** - It is a copy of the project. It(the copy) can be abandoned if it turns out to be useless, so that we can continue from the last stable commit. This Git feature can be used to try out new ideas for a project. A branch can also be deemed the main branch if things work out.
{{./pasted_image.png?width=600}}
--------------------
* When committing, only the changes in the staged files will be committed.
* At its core, a git repo is just a sequence of commits(which is just a transpiration of the hidden .git folder in the project folder).
[[./ud123-git-keyterms.pdf|Git Jargon]]
