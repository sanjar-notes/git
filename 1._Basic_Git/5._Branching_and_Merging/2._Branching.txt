Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-11-07T23:15:41+05:30

====== 2. Branching ======
Created Saturday 07 November 2020

Jargon:
* MASTER - the default branch, created by git
* HEAD - points to the latest commit on the current branch. There's only one HEAD pointer. Used for navigation around branches.
* Every branch's HEAD pointer actually points to the latest commit in that branch. __Redundant__
{{./pasted_image.png}}

--------------------
**Commands**
* Create a branch
{{{code: lang="sh" linenumbers="True"
git branch new_branch_name # creates branch from latest commit of the current branch
git branch new_branch_name SHA_ID # creates branch from the given commit of the current branch
git branch new_branch source_branch
}}}
	
	We need to manually switch to the new branch before we start working on it.
* How to switch to a branch
{{{code: lang="sh" linenumbers="True"
git checkout destination_branch_name # HEAD now points to destination_branch_name
}}}
	
* List all branches
{{{code: lang="sh" linenumbers="True"
git branch # show a list of all branches
# current branch is marked with an asterisk(*)
}}}
	
* Delete a branch
{{{code: lang="sh" linenumbers="True"
git branch -D branch_name # deletes the branch and brings us to the MASTER, if we are on the deletend
}}}
	
* Create branch and switch - in one command
{{{code: lang="sh" linenumbers="True"
git checkout -b new_branch_name
}}}
	
--------------------
* It's important to understand how 'checkout' works. Running the command will:
	* Replace all files and directories from current Working Directory that Git is tracking
		*(files that Git tracks are stored in the repository, so nothing is actually lost)
	* Go into the repository and pull out all of the files and directories of the commit that the branch points to
	* Because we can do one thing at a time, it makes sense to just show information about the current branch. All commands show only branch relevant info.
* When we make a new branch, all the previous commits(i.e before the starting commit of the new branch) are also available to us. This is why we see parallel lines going back in the diagram.
	Red is the main branch here. Lines show reachability.
	{{./pasted_image001.png}}
* git checkout is not like the cd command, it needs an argument at all times.
--------------------
* using git log displays only the commits of the current branch(which includes commit before the start commit of the parent branch)
* git log has an option called **--graph**. This shows the branches in a graphical way.
* **--all** option which displays all commits of the repo, in all branches. It is non-redundant, i.e multiple branches starting from a parent branch don't show the old commits again.
